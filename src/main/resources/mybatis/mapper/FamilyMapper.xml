<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hrms.mapper.FamilyMapper">
	<resultMap id="BaseResultMap" type="com.hrms.entity.Family">
		<id column="id" jdbcType="INTEGER" property="id" />
		<result column="employeeNum" jdbcType="VARCHAR"
			property="employeeNum" />
		<result column="relationship" jdbcType="VARCHAR"
			property="relationship" />
		<result column="name" jdbcType="VARCHAR" property="name" />
		<result column="company" jdbcType="VARCHAR" property="company" />
		<result column="position" jdbcType="VARCHAR"
			property="position" />
		<result column="address" jdbcType="VARCHAR" property="address" />
		<result column="idnumber" jdbcType="VARCHAR"
			property="idnumber" />
		<result column="telephone" jdbcType="VARCHAR"
			property="telephone" />
	</resultMap>
	<resultMap type="com.hrms.entity.Family"
		id="familyMessageMap">
		<id column="id" jdbcType="INTEGER" property="id" />
		<result column="employeeNum" jdbcType="VARCHAR"
			property="employeeNum" />
		<result column="relationship" jdbcType="VARCHAR"
			property="relationship" />
		<result column="name" jdbcType="VARCHAR" property="name" />
		<result column="company" jdbcType="VARCHAR" property="company" />
		<result column="position" jdbcType="VARCHAR"
			property="position" />
		<result column="address" jdbcType="VARCHAR" property="address" />
		<result column="idnumber" jdbcType="VARCHAR"
			property="idnumber" />
		<result column="telephone" jdbcType="VARCHAR"
			property="telephone" />
		<association property="messageSet" javaType="Message">
			<result property="name" column="m_name" />
			<result property="idnumber" column="m_idnumber" />
		</association>
	</resultMap>
	<sql id="Base_Column_List">
		id, employeeNum, relationship,name, company, position,
		address,idnumber, telephone
	</sql>
	<sql id="Leftjoin_Column_List">
		id, emp_family.employeeNum employeeNum,
		emp_family.relationship
		relationship, emp_family.name as name,
		emp_family.company company,
		emp_family.position position,
		emp_family.address address,
		emp_family.idnumber idnumber,
		emp_family.telephone telephone
	</sql>
	<insert id="insertAndgetPK"
		parameterType="com.hrms.entity.Family">
		<selectKey keyProperty="id" order="AFTER"
			resultType="java.lang.Integer">
			SELECT LAST_INSERT_ID()
		</selectKey>
		insert into emp_family (id,
		employeeNum, relationship,
		name, company, position,
		address, idnumber,
		telephone
		)
		values (#{id,jdbcType=INTEGER},
		#{employeeNum,jdbcType=VARCHAR},
		#{relationship,jdbcType=VARCHAR},
		#{name,jdbcType=VARCHAR}, 
		#{company,jdbcType=VARCHAR},
		#{position,jdbcType=VARCHAR},
		#{address,jdbcType=VARCHAR},
		#{idnumber,jdbcType=VARCHAR},
		#{telephone,jdbcType=VARCHAR}
		)
	</insert>
	<!-- 通过id，获取所有家庭信息和员工姓名、身份证号&分页 -->
	<select id="getFamilywithMessagebyid" parameterType="string"
		resultMap="familyMessageMap">
		select
		<include refid="Leftjoin_Column_List"></include>
		,emp_message.name as m_name,emp_message.idnumber as m_idnumber
		from
		emp_family left join emp_message
		on
		emp_family.employeeNum=emp_message.employeeNum
		where id=${id}
	</select>
	<!-- 获取所有家庭信息和员工姓名、身份证号&分页 -->
	<select id="getFamilywithMessage" parameterType="string"
		resultMap="familyMessageMap">
		select
		<include refid="Leftjoin_Column_List"></include>
		,emp_message.name as m_name,emp_message.idnumber as m_idnumber
		from
		emp_family left join emp_message
		on
		emp_family.employeeNum=emp_message.employeeNum
		limit ${page},${limit}
	</select>
	<!-- 获取总数量 -->
	<select id="getEmployeeFamilyTotal" resultType="Integer">
		select count(*)
		from emp_family
	</select>
	<!-- 根据搜索条件获取员工总量 -->
	<select id="getEmployeeByNNITotal" resultType="Integer">
		select count(*)
		from emp_family left join emp_message
		on
		emp_family.employeeNum=emp_message.employeeNum
		where "1=1"
		<if test="employeeNum !=null and employeeNum !='' ">and emp_family.employeeNum LIKE
			CONCAT('%','${employeeNum}','%')</if>
		<if test="name !=null and name !='' ">and emp_message.name LIKE CONCAT('%${name}%')</if>
		<if test="idnumber !=null and idnumber !='' ">and emp_message.idnumber LIKE
			CONCAT('%','${idnumber}','%') </if>
	</select>
	<!-- 通过搜索工号、员工姓名、员工身份证号的搜索结果&分页 -->
	<select id="selectFamilyByNNIusePage" parameterType="map"
		resultMap="familyMessageMap">
		select
		<include refid="Leftjoin_Column_List" />
		,emp_message.name as m_name,emp_message.idnumber as m_idnumber
		from
		emp_family left join emp_message
		on
		emp_family.employeeNum=emp_message.employeeNum
		where "1=1"
		<if test="employeeNum !=null and employeeNum !='' ">and emp_family.employeeNum LIKE
			CONCAT('%','${employeeNum}','%')</if>
		<if test="name !=null and name !='' ">and emp_message.name LIKE CONCAT('%','${name}','%')</if>
		<if test="idnumber !=null and idnumber !='' ">and emp_message.idnumber LIKE
			CONCAT('%','${idnumber}','%') </if>

		limit ${page},${limit}
	</select>
	<!-- <select id="insertMany" parameterType="java.util.ArrayList"> insert 
		into emp_family (id, employeeNum, relationship, name, company, position, 
		address, idnumber, telephone ) values <foreach collection="list" item="item" 
		index="index" separator="," ></foreach> (#{item.id}, #{item.employeeNum}, 
		#{item.relationship}, #{item.name}, #{item.company},#{item.position}, #{item.address}, 
		#{item.idnumber}, #{item.telephone} ) </select> -->
	<select id="selectByPrimaryKey"
		parameterType="java.lang.Integer" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from emp_family
		where id = #{id,jdbcType=INTEGER}
	</select>
	<delete id="deleteByPrimaryKey"
		parameterType="java.lang.Integer">
		delete from emp_family
		where id = #{id,jdbcType=INTEGER}
	</delete>
	<insert id="insert" parameterType="com.hrms.entity.Family">
		insert into emp_family (id,
		employeeNum, relationship,
		name, company, position,
		address, idnumber,
		telephone
		)
		values (#{id,jdbcType=INTEGER},
		#{employeeNum,jdbcType=VARCHAR},
		#{relationship,jdbcType=VARCHAR},
		#{name,jdbcType=VARCHAR}, #{company,jdbcType=VARCHAR},
		#{position,jdbcType=VARCHAR},
		#{address,jdbcType=VARCHAR},
		#{idnumber,jdbcType=VARCHAR},
		#{telephone,jdbcType=VARCHAR}
		)
	</insert>
	<insert id="insertSelective"
		parameterType="com.hrms.entity.Family">
		insert into emp_family
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="employeeNum != null">
				employeeNum,
			</if>
			<if test="relationship != null">
				relationship,
			</if>
			<if test="name != null">
				name,
			</if>
			<if test="company != null">
				company,
			</if>
			<if test="position != null">
				position,
			</if>
			<if test="address != null">
				address,
			</if>
			<if test="idnumber != null">
				idnumber,
			</if>
			<if test="telephone != null">
				telephone,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=INTEGER},
			</if>
			<if test="employeeNum != null">
				#{employeeNum,jdbcType=VARCHAR},
			</if>
			<if test="relationship != null">
				#{relationship,jdbcType=VARCHAR},
			</if>
			<if test="name != null">
				#{name,jdbcType=VARCHAR},
			</if>
			<if test="company != null">
				#{company,jdbcType=VARCHAR},
			</if>
			<if test="position != null">
				#{position,jdbcType=VARCHAR},
			</if>
			<if test="address != null">
				#{address,jdbcType=VARCHAR},
			</if>
			<if test="idnumber != null">
				#{idnumber,jdbcType=VARCHAR},
			</if>
			<if test="telephone != null">
				#{telephone,jdbcType=VARCHAR},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective"
		parameterType="com.hrms.entity.Family">
		update emp_family
		<set>
			<if test="employeeNum != null">
				employeeNum = #{employeeNum,jdbcType=VARCHAR},
			</if>
			<if test="relationship != null">
				relationship = #{relationship,jdbcType=VARCHAR},
			</if>
			<if test="name != null">
				name = #{name,jdbcType=VARCHAR},
			</if>
			<if test="company != null">
				company = #{company,jdbcType=VARCHAR},
			</if>
			<if test="position != null">
				position = #{position,jdbcType=VARCHAR},
			</if>
			<if test="address != null">
				address = #{address,jdbcType=VARCHAR},
			</if>
			<if test="idnumber != null">
				idnumber = #{idnumber,jdbcType=VARCHAR},
			</if>
			<if test="telephone != null">
				telephone = #{telephone,jdbcType=VARCHAR},
			</if>
		</set>
		where id = #{id,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey"
		parameterType="com.hrms.entity.Family">
		update emp_family
		set employeeNum =
		#{employeeNum,jdbcType=VARCHAR},
		relationship =
		#{relationship,jdbcType=VARCHAR},
		name = #{name,jdbcType=VARCHAR},
		company = #{company,jdbcType=VARCHAR},
		position =
		#{position,jdbcType=VARCHAR},
		address = #{address,jdbcType=VARCHAR},
		idnumber = #{idnumber,jdbcType=VARCHAR},
		telephone =
		#{telephone,jdbcType=VARCHAR}
		where id = #{id,jdbcType=INTEGER}
	</update>
</mapper>